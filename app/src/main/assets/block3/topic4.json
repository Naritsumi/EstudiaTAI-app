{  "topicId": 4,  "questions": [    {      "questionId": 1,      "question": "Â¿QuÃ© es un objeto en la programaciÃ³n orientada a objetos?",      "options": ["Una variable que almacena datos de cualquier tipo", "Una instancia de una clase que contiene atributos y mÃ©todos", "Un diagrama UML que representa la relaciÃ³n entre entidades", "Un fragmento de cÃ³digo reutilizable dentro de un programa"],      "correctAnswer": 1    },    {      "questionId": 2,      "question": "Â¿CuÃ¡l de los siguientes principios permite ocultar los detalles internos de un objeto y exponer solo lo necesario?",      "options": ["Encapsulamiento", "Polimorfismo", "Herencia", "AbstracciÃ³n"],      "correctAnswer": 0    },    {      "questionId": 3,      "question": "Â¿QuÃ© ventaja proporciona la programaciÃ³n orientada a objetos?",      "options": ["Menor consumo de memoria", "Mayor dificultad en la organizaciÃ³n del cÃ³digo", "Mayor reutilizaciÃ³n de cÃ³digo", "Imposibilidad de modelar sistemas grandes"],      "correctAnswer": 2    },    {      "questionId": 4,      "question": "Â¿QuÃ© concepto permite a una clase derivada reutilizar cÃ³digo de una clase base?",      "options": ["Encapsulamiento", "Herencia", "Polimorfismo", "Sobrecarga"],      "correctAnswer": 1    },    {      "questionId": 5,      "question": "Â¿CuÃ¡l de los siguientes NO es un inconveniente de la programaciÃ³n orientada a objetos?",      "options": ["Mayor consumo de memoria", "Complejidad en el diseÃ±o", "ReutilizaciÃ³n del cÃ³digo", "Sobrecarga de rendimiento"],      "correctAnswer": 2    },    {      "questionId": 6,      "question": "Â¿QuÃ© es un diagrama de clases en UML?",      "options": ["Un diagrama que muestra la comunicaciÃ³n entre objetos en tiempo de ejecuciÃ³n", "Un diagrama que representa clases, atributos, mÃ©todos y relaciones", "Un diagrama que modela el flujo de actividades dentro de un proceso", "Un diagrama que describe cÃ³mo se despliega el sistema en hardware"],      "correctAnswer": 1    },    {      "questionId": 7,      "question": "Â¿CuÃ¡l de los siguientes diagramas UML pertenece a los diagramas de interacciÃ³n?",      "options": ["Diagrama de Clases", "Diagrama de Paquetes", "Diagrama de Secuencia", "Diagrama de Componentes"],      "correctAnswer": 2    },    {      "questionId": 8,      "question": "Â¿QuÃ© tipo de polimorfismo permite que un mÃ©todo tenga diferentes implementaciones en clases derivadas?",      "options": ["Polimorfismo de sobrecarga", "Polimorfismo de herencia", "Polimorfismo de compilaciÃ³n", "Polimorfismo de sobreescritura"],      "correctAnswer": 3    },    {      "questionId": 9,      "question": "Â¿QuÃ© diagrama UML muestra cÃ³mo interactÃºan los objetos a lo largo del tiempo?",      "options": ["Diagrama de Secuencia", "Diagrama de Clases", "Diagrama de Casos de Uso", "Diagrama de Despliegue"],      "correctAnswer": 0    },    {      "questionId": 10,      "question": "Â¿CuÃ¡l es una caracterÃ­stica de la sobrecarga de mÃ©todos?",      "options": ["Permite modificar la visibilidad de un mÃ©todo en una subclase", "Permite definir mÃºltiples mÃ©todos con el mismo nombre pero diferentes parÃ¡metros", "Permite ejecutar una funciÃ³n en tiempo de ejecuciÃ³n segÃºn el tipo de objeto", "Impide que dos mÃ©todos tengan el mismo nombre dentro de una clase"],      "correctAnswer": 1    },    {      "questionId": 11,      "question": "Â¿QuÃ© es la programaciÃ³n orientada a objetos (POO)?",      "options": ["Un paradigma que utiliza funciones para resolver problemas", "Un paradigma que utiliza objetos para representar datos y mÃ©todos", "Un lenguaje de consulta para bases de datos", "Un sistema operativo"],      "correctAnswer": 1    },    {      "questionId": 12,      "question": "Â¿QuÃ© es un objeto en POO?",      "options": ["Una clase que define la estructura y el comportamiento", "Una instancia de una clase que contiene estado y comportamiento", "Un tipo de dato primitivo", "Un sistema operativo"],      "correctAnswer": 1    },    {      "questionId": 13,      "question": "Â¿QuÃ© es una clase en POO?",      "options": ["Una instancia de una clase", "Una plantilla que define la estructura y el comportamiento de los objetos", "Un tipo de dato primitivo", "Un sistema operativo"],      "correctAnswer": 1    },    {      "questionId": 14,      "question": "Â¿QuÃ© es la herencia en POO?",      "options": ["La capacidad de una clase para adoptar diferentes formas", "La capacidad de una clase para ocultar su estado interno", "La capacidad de una clase para heredar atributos y mÃ©todos de otra clase", "La capacidad de una clase para crear mÃºltiples instancias"],      "correctAnswer": 2    },    {      "questionId": 15,      "question": "Â¿QuÃ© es el polimorfismo en POO?",      "options": ["La capacidad de una clase para ocultar su estado interno", "La capacidad de una clase para heredar atributos y mÃ©todos de otra clase", "La capacidad de una clase o mÃ©todo para adoptar diferentes formas", "La capacidad de una clase para crear mÃºltiples instancias"],      "correctAnswer": 2    },    {      "questionId": 16,      "question": "Â¿QuÃ© es el encapsulamiento en POO?",      "options": ["La capacidad de una clase para ocultar su estado interno", "La capacidad de una clase para heredar atributos y mÃ©todos de otra clase", "La capacidad de una clase para adoptar diferentes formas", "La capacidad de una clase para crear mÃºltiples instancias"],      "correctAnswer": 0    },    {      "questionId": 17,      "question": "Â¿QuÃ© es la abstracciÃ³n en POO?",      "options": ["El proceso de simplificar y representar los aspectos esenciales de una entidad", "El proceso de ocultar el estado interno de un objeto", "El proceso de heredar atributos y mÃ©todos de otra clase", "El proceso de adoptar diferentes formas"],      "correctAnswer": 0    },    {      "questionId": 18,      "question": "Â¿QuÃ© es UML?",      "options": ["Un lenguaje de programaciÃ³n orientado a objetos", "Un lenguaje de modelado visual para el diseÃ±o de software", "Un sistema operativo", "Un lenguaje de consulta para bases de datos"],      "correctAnswer": 1    },    {      "questionId": 19,      "question": "Â¿QuÃ© es un diagrama de clases en UML?",      "options": ["Un diagrama que muestra la interacciÃ³n entre actores y el sistema", "Un diagrama que muestra las clases, atributos, mÃ©todos y relaciones entre ellas", "Un diagrama que muestra la distribuciÃ³n fÃ­sica de los componentes", "Un diagrama que muestra los estados por los que puede pasar un objeto"],      "correctAnswer": 1    },    {      "questionId": 20,      "question": "Â¿QuÃ© es un diagrama de casos de uso en UML?",      "options": ["Un diagrama que muestra las clases y sus relaciones", "Un diagrama que muestra la interacciÃ³n entre actores y el sistema", "Un diagrama que muestra la distribuciÃ³n fÃ­sica de los componentes", "Un diagrama que muestra los estados por los que puede pasar un objeto"],      "correctAnswer": 1    },    {      "questionId": 21,      "question": "Â¿QuÃ© es un patrÃ³n de diseÃ±o?",      "options": ["Un enfoque de programaciÃ³n que utiliza funciones para resolver problemas", "Una soluciÃ³n reutilizable a un problema comÃºn en el diseÃ±o de software", "Un lenguaje de consulta para bases de datos", "Un sistema operativo"],      "correctAnswer": 1    },    {      "questionId": 22,      "question": "Â¿QuÃ© es el patrÃ³n Singleton?",      "options": ["Un patrÃ³n que permite que una clase tenga mÃºltiples instancias", "Un patrÃ³n que asegura que una clase tenga una Ãºnica instancia", "Un patrÃ³n que permite que un objeto adopte diferentes formas", "Un patrÃ³n que oculta el estado interno de un objeto"],      "correctAnswer": 1    },    {      "questionId": 23,      "question": "Â¿QuÃ© es el patrÃ³n Factory Method?",      "options": ["Un patrÃ³n que define una interfaz para crear objetos", "Un patrÃ³n que asegura que una clase tenga una Ãºnica instancia", "Un patrÃ³n que permite que un objeto adopte diferentes formas", "Un patrÃ³n que oculta el estado interno de un objeto"],      "correctAnswer": 0    },    {      "questionId": 24,      "question": "Â¿QuÃ© es el patrÃ³n Adapter?",      "options": ["Un patrÃ³n que permite que dos interfaces incompatibles trabajen juntas", "Un patrÃ³n que asegura que una clase tenga una Ãºnica instancia", "Un patrÃ³n que permite que un objeto adopte diferentes formas", "Un patrÃ³n que oculta el estado interno de un objeto"],      "correctAnswer": 0    },    {      "questionId": 25,      "question": "Â¿QuÃ© es el patrÃ³n Observer?",      "options": ["Un patrÃ³n que define una dependencia de uno a muchos entre objetos", "Un patrÃ³n que asegura que una clase tenga una Ãºnica instancia", "Un patrÃ³n que permite que un objeto adopte diferentes formas", "Un patrÃ³n que oculta el estado interno de un objeto"],      "correctAnswer": 0    },    {      "questionId": 26,      "question": "Â¿QuÃ© es la relaciÃ³n de herencia en un diagrama de clases?",      "options": ["Una relaciÃ³n que conecta dos clases sin dependencia fuerte entre ellas", "Una relaciÃ³n jerÃ¡rquica en la que una clase hereda atributos y mÃ©todos de otra", "Una relaciÃ³n que oculta el estado interno de un objeto", "Una relaciÃ³n que permite que un objeto adopte diferentes formas"],      "correctAnswer": 1    },    {      "questionId": 27,      "question": "Â¿QuÃ© es la relaciÃ³n de composiciÃ³n en un diagrama de clases?",      "options": ["Una relaciÃ³n que conecta dos clases sin dependencia fuerte entre ellas", "Una relaciÃ³n fuerte en la que una clase contiene a otra y sus ciclos de vida estÃ¡n ligados", "Una relaciÃ³n que oculta el estado interno de un objeto", "Una relaciÃ³n que permite que un objeto adopte diferentes formas"],      "correctAnswer": 1    },    {      "questionId": 28,      "question": "Â¿QuÃ© es la relaciÃ³n de agregaciÃ³n en un diagrama de clases?",      "options": ["Una relaciÃ³n que conecta dos clases sin dependencia fuerte entre ellas", "Una relaciÃ³n fuerte en la que una clase contiene a otra y sus ciclos de vida estÃ¡n ligados", "Una relaciÃ³n que oculta el estado interno de un objeto", "Una relaciÃ³n que permite que un objeto adopte diferentes formas"],      "correctAnswer": 0    },    {      "questionId": 29,      "question": "Â¿QuÃ© es el lenguaje OCL en UML?",      "options": ["Un lenguaje formal para definir restricciones y condiciones en los modelos", "Un lenguaje de consulta para bases de datos", "Un sistema operativo", "Un lenguaje de programaciÃ³n orientado a objetos"],      "correctAnswer": 0    },    {      "questionId": 30,      "question": "Â¿QuÃ© es el formato XMI en UML?",      "options": ["Un formato utilizado para el intercambio de modelos entre herramientas de software", "Un lenguaje de consulta para bases de datos", "Un sistema operativo", "Un lenguaje de programaciÃ³n orientado a objetos"],      "correctAnswer": 0    }  ]}