{
  "topicId": 4,
  "questions": [
    {
      "questionId": 1,
      "question": "¿Qué es un objeto en la programación orientada a objetos?",
      "options": ["Una variable que almacena datos de cualquier tipo", "Una instancia de una clase que contiene atributos y métodos", "Un diagrama UML que representa la relación entre entidades", "Un fragmento de código reutilizable dentro de un programa"],
      "correctAnswer": 1
    },
    {
      "questionId": 2,
      "question": "¿Cuál de los siguientes principios permite ocultar los detalles internos de un objeto y exponer solo lo necesario?",
      "options": ["Encapsulamiento", "Polimorfismo", "Herencia", "Abstracción"],
      "correctAnswer": 0
    },
    {
      "questionId": 3,
      "question": "¿Qué ventaja proporciona la programación orientada a objetos?",
      "options": ["Menor consumo de memoria", "Mayor dificultad en la organización del código", "Mayor reutilización de código", "Imposibilidad de modelar sistemas grandes"],
      "correctAnswer": 2
    },
    {
      "questionId": 4,
      "question": "¿Qué concepto permite a una clase derivada reutilizar código de una clase base?",
      "options": ["Encapsulamiento", "Herencia", "Polimorfismo", "Sobrecarga"],
      "correctAnswer": 1
    },
    {
      "questionId": 5,
      "question": "¿Cuál de los siguientes NO es un inconveniente de la programación orientada a objetos?",
      "options": ["Mayor consumo de memoria", "Complejidad en el diseño", "Reutilización del código", "Sobrecarga de rendimiento"],
      "correctAnswer": 2
    },
    {
      "questionId": 6,
      "question": "¿Qué es un diagrama de clases en UML?",
      "options": ["Un diagrama que muestra la comunicación entre objetos en tiempo de ejecución", "Un diagrama que representa clases, atributos, métodos y relaciones", "Un diagrama que modela el flujo de actividades dentro de un proceso", "Un diagrama que describe cómo se despliega el sistema en hardware"],
      "correctAnswer": 1
    },
    {
      "questionId": 7,
      "question": "¿Cuál de los siguientes diagramas UML pertenece a los diagramas de interacción?",
      "options": ["Diagrama de Clases", "Diagrama de Paquetes", "Diagrama de Secuencia", "Diagrama de Componentes"],
      "correctAnswer": 2
    },
    {
      "questionId": 8,
      "question": "¿Qué tipo de polimorfismo permite que un método tenga diferentes implementaciones en clases derivadas?",
      "options": ["Polimorfismo de sobrecarga", "Polimorfismo de herencia", "Polimorfismo de compilación", "Polimorfismo de sobreescritura"],
      "correctAnswer": 3
    },
    {
      "questionId": 9,
      "question": "¿Qué diagrama UML muestra cómo interactúan los objetos a lo largo del tiempo?",
      "options": ["Diagrama de Secuencia", "Diagrama de Clases", "Diagrama de Casos de Uso", "Diagrama de Despliegue"],
      "correctAnswer": 0
    },
    {
      "questionId": 10,
      "question": "¿Cuál es una característica de la sobrecarga de métodos?",
      "options": ["Permite modificar la visibilidad de un método en una subclase", "Permite definir múltiples métodos con el mismo nombre pero diferentes parámetros", "Permite ejecutar una función en tiempo de ejecución según el tipo de objeto", "Impide que dos métodos tengan el mismo nombre dentro de una clase"],
      "correctAnswer": 1
    },
    {
      "questionId": 11,
      "question": "¿Qué es la programación orientada a objetos (POO)?",
      "options": ["Un paradigma que utiliza funciones para resolver problemas", "Un paradigma que utiliza objetos para representar datos y métodos", "Un lenguaje de consulta para bases de datos", "Un sistema operativo"],
      "correctAnswer": 1
    },
    {
      "questionId": 12,
      "question": "¿Qué es un objeto en POO?",
      "options": ["Una clase que define la estructura y el comportamiento", "Una instancia de una clase que contiene estado y comportamiento", "Un tipo de dato primitivo", "Un sistema operativo"],
      "correctAnswer": 1
    },
    {
      "questionId": 13,
      "question": "¿Qué es una clase en POO?",
      "options": ["Una instancia de una clase", "Una plantilla que define la estructura y el comportamiento de los objetos", "Un tipo de dato primitivo", "Un sistema operativo"],
      "correctAnswer": 1
    },
    {
      "questionId": 14,
      "question": "¿Qué es la herencia en POO?",
      "options": ["La capacidad de una clase para adoptar diferentes formas", "La capacidad de una clase para ocultar su estado interno", "La capacidad de una clase para heredar atributos y métodos de otra clase", "La capacidad de una clase para crear múltiples instancias"],
      "correctAnswer": 2
    },
    {
      "questionId": 15,
      "question": "¿Qué es el polimorfismo en POO?",
      "options": ["La capacidad de una clase para ocultar su estado interno", "La capacidad de una clase para heredar atributos y métodos de otra clase", "La capacidad de una clase o método para adoptar diferentes formas", "La capacidad de una clase para crear múltiples instancias"],
      "correctAnswer": 2
    },
    {
      "questionId": 16,
      "question": "¿Qué es el encapsulamiento en POO?",
      "options": ["La capacidad de una clase para ocultar su estado interno", "La capacidad de una clase para heredar atributos y métodos de otra clase", "La capacidad de una clase para adoptar diferentes formas", "La capacidad de una clase para crear múltiples instancias"],
      "correctAnswer": 0
    },
    {
      "questionId": 17,
      "question": "¿Qué es la abstracción en POO?",
      "options": ["El proceso de simplificar y representar los aspectos esenciales de una entidad", "El proceso de ocultar el estado interno de un objeto", "El proceso de heredar atributos y métodos de otra clase", "El proceso de adoptar diferentes formas"],
      "correctAnswer": 0
    },
    {
      "questionId": 18,
      "question": "¿Qué es UML?",
      "options": ["Un lenguaje de programación orientado a objetos", "Un lenguaje de modelado visual para el diseño de software", "Un sistema operativo", "Un lenguaje de consulta para bases de datos"],
      "correctAnswer": 1
    },
    {
      "questionId": 19,
      "question": "¿Qué es un diagrama de clases en UML?",
      "options": ["Un diagrama que muestra la interacción entre actores y el sistema", "Un diagrama que muestra las clases, atributos, métodos y relaciones entre ellas", "Un diagrama que muestra la distribución física de los componentes", "Un diagrama que muestra los estados por los que puede pasar un objeto"],
      "correctAnswer": 1
    },
    {
      "questionId": 20,
      "question": "¿Qué es un diagrama de casos de uso en UML?",
      "options": ["Un diagrama que muestra las clases y sus relaciones", "Un diagrama que muestra la interacción entre actores y el sistema", "Un diagrama que muestra la distribución física de los componentes", "Un diagrama que muestra los estados por los que puede pasar un objeto"],
      "correctAnswer": 1
    },
    {
      "questionId": 21,
      "question": "¿Qué es un patrón de diseño?",
      "options": ["Un enfoque de programación que utiliza funciones para resolver problemas", "Una solución reutilizable a un problema común en el diseño de software", "Un lenguaje de consulta para bases de datos", "Un sistema operativo"],
      "correctAnswer": 1
    },
    {
      "questionId": 22,
      "question": "¿Qué es el patrón Singleton?",
      "options": ["Un patrón que permite que una clase tenga múltiples instancias", "Un patrón que asegura que una clase tenga una única instancia", "Un patrón que permite que un objeto adopte diferentes formas", "Un patrón que oculta el estado interno de un objeto"],
      "correctAnswer": 1
    },
    {
      "questionId": 23,
      "question": "¿Qué es el patrón Factory Method?",
      "options": ["Un patrón que define una interfaz para crear objetos", "Un patrón que asegura que una clase tenga una única instancia", "Un patrón que permite que un objeto adopte diferentes formas", "Un patrón que oculta el estado interno de un objeto"],
      "correctAnswer": 0
    },
    {
      "questionId": 24,
      "question": "¿Qué es el patrón Adapter?",
      "options": ["Un patrón que permite que dos interfaces incompatibles trabajen juntas", "Un patrón que asegura que una clase tenga una única instancia", "Un patrón que permite que un objeto adopte diferentes formas", "Un patrón que oculta el estado interno de un objeto"],
      "correctAnswer": 0
    },
    {
      "questionId": 25,
      "question": "¿Qué es el patrón Observer?",
      "options": ["Un patrón que define una dependencia de uno a muchos entre objetos", "Un patrón que asegura que una clase tenga una única instancia", "Un patrón que permite que un objeto adopte diferentes formas", "Un patrón que oculta el estado interno de un objeto"],
      "correctAnswer": 0
    },
    {
      "questionId": 26,
      "question": "¿Qué es la relación de herencia en un diagrama de clases?",
      "options": ["Una relación que conecta dos clases sin dependencia fuerte entre ellas", "Una relación jerárquica en la que una clase hereda atributos y métodos de otra", "Una relación que oculta el estado interno de un objeto", "Una relación que permite que un objeto adopte diferentes formas"],
      "correctAnswer": 1
    },
    {
      "questionId": 27,
      "question": "¿Qué es la relación de composición en un diagrama de clases?",
      "options": ["Una relación que conecta dos clases sin dependencia fuerte entre ellas", "Una relación fuerte en la que una clase contiene a otra y sus ciclos de vida están ligados", "Una relación que oculta el estado interno de un objeto", "Una relación que permite que un objeto adopte diferentes formas"],
      "correctAnswer": 1
    },
    {
      "questionId": 28,
      "question": "¿Qué es la relación de agregación en un diagrama de clases?",
      "options": ["Una relación que conecta dos clases sin dependencia fuerte entre ellas", "Una relación fuerte en la que una clase contiene a otra y sus ciclos de vida están ligados", "Una relación que oculta el estado interno de un objeto", "Una relación que permite que un objeto adopte diferentes formas"],
      "correctAnswer": 0
    },
    {
      "questionId": 29,
      "question": "¿Qué es el lenguaje OCL en UML?",
      "options": ["Un lenguaje formal para definir restricciones y condiciones en los modelos", "Un lenguaje de consulta para bases de datos", "Un sistema operativo", "Un lenguaje de programación orientado a objetos"],
      "correctAnswer": 0
    },
    {
      "questionId": 30,
      "question": "¿Qué es el formato XMI en UML?",
      "options": ["Un formato utilizado para el intercambio de modelos entre herramientas de software", "Un lenguaje de consulta para bases de datos", "Un sistema operativo", "Un lenguaje de programación orientado a objetos"],
      "correctAnswer": 0
    }
  ]
}
