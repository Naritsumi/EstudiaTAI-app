package com.tech.estudiatai

import android.annotation.SuppressLint
import android.app.Activity
import android.content.Intent
import android.net.Uri
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.verticalScroll
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.automirrored.filled.ArrowBack
import androidx.compose.material.icons.filled.Email
import androidx.compose.material3.Icon
import androidx.compose.material3.IconButton
import androidx.compose.material3.IconButtonDefaults
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.shadow
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.unit.dp
import com.tech.estudiatai.ui.theme.AppTheme
import androidx.core.net.toUri

class ReadMeActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
            AppTheme {
                Scaffold(modifier = Modifier.fillMaxSize()) { innerPadding ->
                    ReadMeScreen(modifier = Modifier.padding(innerPadding))
                }
            }
        }
    }
}

@Composable
fun ReadMeScreen(modifier: Modifier = Modifier) {
    // Permite desplazamiento en caso de que el contenido sea largo
    val scrollState = rememberScrollState()
    val context = LocalContext.current

    Column(
        modifier = modifier
            .fillMaxSize()
            .verticalScroll(scrollState)
            .padding(12.dp)
            .background(MaterialTheme.colorScheme.background)
    ) {
        IconButton(onClick = { (context as? Activity)?.finish() }) {
            Icon(Icons.AutoMirrored.Filled.ArrowBack, contentDescription = "Salir", tint = MaterialTheme.colorScheme.onSecondary)
        }
        Text(
            text = "¬°Bienvenido a EstudiaTAI!",
            style = MaterialTheme.typography.headlineMedium,
            textAlign = TextAlign.Center,
            modifier = Modifier.fillMaxWidth(),
            color = MaterialTheme.colorScheme.onSecondary
        )

        Text(
            text = """
                Esta es una aplicaci√≥n desarrollada como proyecto personal y hobby para ayudar a la gente que quiere prepararse la oposici√≥n, ya que yo tambi√©n he pasado por ah√≠ y s√© lo dif√≠cil que es. 
                
                Estoy trabajando constantemente para mejorarla y a√±adir nuevas funcionalidades. Espero que disfrutes us√°ndola tanto como yo disfruto desarroll√°ndola.

                Por favor, recuerda que esta es una aplicaci√≥n en constante desarrollo y habr√° actualizaciones frecuentes para a√±adir temario y mejorar la aplicaci√≥n.

                Si tienes alg√∫n comentario, sugerencia, encuentras alg√∫n problema o informaci√≥n errada, no dudes en contactarme.
            """.trimIndent(),
            style = MaterialTheme.typography.bodyLarge,
            modifier = Modifier.padding(16.dp),
            color = MaterialTheme.colorScheme.onSecondary
        )

        KoFiAndCoffeeButtons()

        Spacer(modifier = Modifier.height(16.dp))

        Text(
            text = """
                ¬°Gracias por tu apoyo! :)
                                
                IMPORTANTE: Los apuntes aportados en esta aplicaci√≥n NO est√°n sujetos a derechos de autor.                 
            """.trimIndent(),
            style = MaterialTheme.typography.bodyLarge,
            textAlign = TextAlign.Justify,
            modifier = Modifier.padding(16.dp),
            color = MaterialTheme.colorScheme.onSecondary
        )
        
        EmailButton()
    }
}

@SuppressLint("UseKtx")
@Composable
fun KoFiAndCoffeeButtons() {
    val context = LocalContext.current

    Row(
        modifier = Modifier
            .fillMaxWidth()
            .padding(top = 16.dp),
        horizontalArrangement = Arrangement.SpaceEvenly,
        verticalAlignment = Alignment.CenterVertically
    ) {
        // ü©µ Bot√≥n Ko-fi
        IconButton(
            onClick = {
                val intent = Intent(
                    Intent.ACTION_VIEW,
                    "https://ko-fi.com/tech_racoon".toUri() 
                )
                context.startActivity(intent)
            },
            modifier = Modifier
                .width(180.dp)
                .height(60.dp)
                .shadow(5.dp, shape = RoundedCornerShape(25.dp)),
            colors = IconButtonDefaults.iconButtonColors(
                containerColor = MaterialTheme.colorScheme.secondary,
                contentColor = MaterialTheme.colorScheme.onSecondary
            )
        ) {
            Row(
                verticalAlignment = Alignment.CenterVertically,
                horizontalArrangement = Arrangement.Center,
                modifier = Modifier.fillMaxWidth()
            ) {
                Icon(
                    painter = painterResource(id = R.drawable.bmc_logo), // a√±ade un logo kofi.png o .xml a res/drawable
                    contentDescription = "Ko-fi",
                    modifier = Modifier.size(24.dp)
                )
                Spacer(modifier = Modifier.width(8.dp))
                Text("Ap√≥yame en Ko-fi")
            }
        }

        // ‚òï Bot√≥n Buy Me a Coffee
        IconButton(
            onClick = {
                val intent = Intent(
                    Intent.ACTION_VIEW,
                    "https://buymeacoffee.com/tech_racoon".toUri()
                )
                context.startActivity(intent)
            },
            modifier = Modifier
                .width(180.dp)
                .height(60.dp)
                .shadow(5.dp, shape = RoundedCornerShape(25.dp)),
            colors = IconButtonDefaults.iconButtonColors(
                containerColor = MaterialTheme.colorScheme.tertiary,
                contentColor = MaterialTheme.colorScheme.onTertiary
            )
        ) {
            Row(
                verticalAlignment = Alignment.CenterVertically,
                horizontalArrangement = Arrangement.Center,
                modifier = Modifier.fillMaxWidth()
            ) {
                Icon(
                    painter = painterResource(id = R.drawable.bmc_logo),
                    contentDescription = "Buy Me a Coffee",
                    modifier = Modifier.size(24.dp)
                )
                Spacer(modifier = Modifier.width(8.dp))
                Text("Inv√≠tame a un caf√©")
            }
        }
    }
}

@SuppressLint("UseKtx")
@Composable
fun EmailButton() {
    val context = LocalContext.current

    IconButton(
        onClick = {
            val intent = Intent(Intent.ACTION_SEND).apply {
                type = "message/rfc822"
                putExtra(Intent.EXTRA_EMAIL, arrayOf("techracoon.group@gmail.com"))
                putExtra(Intent.EXTRA_SUBJECT, "EstudiaTAI")
            }
            val chooser = Intent.createChooser(intent, "Selecciona una aplicaci√≥n de correo")
            if (intent.resolveActivity(context.packageManager) != null) {
                context.startActivity(chooser)
            }
        },
        modifier = Modifier
            .align(Alignment.CenterHorizontally)
            .width(180.dp)
            .height(60.dp)
            .shadow(5.dp, shape = RoundedCornerShape(25.dp)),
        colors = IconButtonDefaults.iconButtonColors(
            containerColor = MaterialTheme.colorScheme.primary,
            contentColor = MaterialTheme.colorScheme.surface
        )
    ) {
        Row(
            verticalAlignment = Alignment.CenterVertically,
            horizontalArrangement = Arrangement.Center,
            modifier = Modifier.fillMaxWidth()
        ) {
            Icon(Icons.Default.Email, contentDescription = "Enviar correo", modifier = Modifier.size(24.dp))
            Spacer(modifier = Modifier.width(6.dp))
            Text("¬°Escr√≠beme!")
        }
    }
}


